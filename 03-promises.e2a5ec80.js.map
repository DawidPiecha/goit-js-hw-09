{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAcC,SAASC,cAAc,SACrCC,EAAeF,SAASC,cAAc,+BACtCE,EAAcH,SAASC,cAAc,UAE3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPP,EAAYe,iBAAiB,UAAU,SAAAC,GACrCA,EAAMC,iBACN,IAAMC,EAAYC,OAAOH,EAAMI,OAAOC,SAASd,MAAMe,OAC/CC,EAAWJ,OAAOH,EAAMI,OAAOC,SAASG,KAAKF,OAC7CG,EAAaN,OAAOH,EAAMI,OAAOC,SAASK,OAAOJ,OAEvDnB,EAAawB,UAAW,EAGxB,IAFA,IAAIC,EAAgB,EAEXC,EAAI,EAAGA,EAAIJ,EAAYI,IAC9BxB,EAAcwB,EAAI,EAAGX,EAAYK,EAAWM,GACzCC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAAlC,GAASmC,OAAOI,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAG9C+B,SAAQ,aACPV,IACsBH,IACpBtB,EAAawB,UAAW,E,OAMlCvB,EAAYW,iBAAiB,SAAS,WACpCwB,SAASC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst promiseForm = document.querySelector('.form');\nconst submitButton = document.querySelector('.form button[type=\"submit\"]');\nconst resetButton = document.querySelector('.reset');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\npromiseForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const delayData = Number(event.target.elements.delay.value);\n  const stepData = Number(event.target.elements.step.value);\n  const amountData = Number(event.target.elements.amount.value);\n\n  submitButton.disabled = true;\n  let promisesCount = 0;\n\n  for (let i = 0; i < amountData; i++) {\n    createPromise(i + 1, delayData + stepData * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        promisesCount++;\n        if (promisesCount === amountData) {\n          submitButton.disabled = false;\n        }\n      });\n  }\n});\n\nresetButton.addEventListener('click', () => {\n  location.reload();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$promiseForm","document","querySelector","$ce04d3a99e08e73b$var$submitButton","$ce04d3a99e08e73b$var$resetButton","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayData","Number","target","elements","value","stepData","step","amountData","amount","disabled","promisesCount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","location","reload"],"version":3,"file":"03-promises.e2a5ec80.js.map"}