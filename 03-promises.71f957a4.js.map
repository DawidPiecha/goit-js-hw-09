{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAcC,SAASC,cAAc,SACrCC,EAAeF,SAASC,cAAc,+BACtCE,EAAcH,SAASC,cAAc,UAE3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbP,EAAYe,iBAAiB,UAAUC,IACrCA,EAAMC,iBACN,MAAMC,EAAYC,OAAOH,EAAMI,OAAOC,SAASd,MAAMe,OAC/CC,EAAWJ,OAAOH,EAAMI,OAAOC,SAASG,KAAKF,OAC7CG,EAAaN,OAAOH,EAAMI,OAAOC,SAASK,OAAOJ,OAEvDnB,EAAawB,UAAW,EACxB,IAAIC,EAAgB,EAEpB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAYI,IAC9BxB,EAAcwB,EAAI,EAAGX,EAAYK,EAAWM,GACzCC,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAAjC,GAASkC,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAGhD6B,SAAQ,KACPR,IACIA,IAAkBH,IACpBtB,EAAawB,UAAW,EAAK,GAE/B,IAIRvB,EAAYW,iBAAiB,SAAS,KACpCsB,SAASC,QAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst promiseForm = document.querySelector('.form');\nconst submitButton = document.querySelector('.form button[type=\"submit\"]');\nconst resetButton = document.querySelector('.reset');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\npromiseForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const delayData = Number(event.target.elements.delay.value);\n  const stepData = Number(event.target.elements.step.value);\n  const amountData = Number(event.target.elements.amount.value);\n\n  submitButton.disabled = true;\n  let promisesCount = 0;\n\n  for (let i = 0; i < amountData; i++) {\n    createPromise(i + 1, delayData + stepData * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        promisesCount++;\n        if (promisesCount === amountData) {\n          submitButton.disabled = false;\n        }\n      });\n  }\n});\n\nresetButton.addEventListener('click', () => {\n  location.reload();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$promiseForm","document","querySelector","$47d4ff9957288465$var$submitButton","$47d4ff9957288465$var$resetButton","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayData","Number","target","elements","value","stepData","step","amountData","amount","disabled","promisesCount","i","then","$parcel$interopDefault","Notify","success","catch","failure","finally","location","reload"],"version":3,"file":"03-promises.71f957a4.js.map"}